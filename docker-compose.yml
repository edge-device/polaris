version : '3.1'

networks:
  polaris-net:

services:
  api:
    image: polaris-service:latest
    environment:
      DBUSER: polaris
      #DBPASSWD: Intel123!
      DBNAME: polaris
      DBHOST: mysql
      DBPORT: 3306
    ports:
      - "8000:8000"
    networks:
      - polaris-net
    secrets:
      - db_polaris_passwd
      - jwt_signing_key

  mysql:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_passwd
      MYSQL_PASSWORD_FILE: /run/secrets/db_polaris_passwd
      MYSQL_USER: polaris
      MYSQL_DATABASE: polaris
    ports:
      - "3306:3306"
    networks:
      - polaris-net
    volumes:
      - "./polaris-service/mysql_init.sql:/docker-entrypoint-initdb.d/mysql_init.sql"
    secrets:
      - db_root_passwd
      - db_polaris_passwd

  nginx:
    image: nginx:1.23-alpine
    restart: unless-stopped
    volumes:
      - ./web-ui/config/nginx:/etc/nginx/conf.d
      - ./web-ui/config/certbot/conf:/etc/letsencrypt
      - ./web-ui/config/certbot/www:/var/www/certbot
      - ./web-ui/www:/var/www/polaris
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./web-ui/config/certbot/conf:/etc/letsencrypt
      - ./web-ui/config/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

secrets:
  db_root_passwd:
    file: polaris-service/secrets/db_root_passwd
  db_polaris_passwd:
    file: polaris-service/secrets/db_polaris_passwd
  jwt_signing_key:
    file: polaris-service/secrets/jwt_key